// Generated by HLC 4.1.5 (HL v5)
#ifndef INC_haxe__macro__ExprDef
#define INC_haxe__macro__ExprDef
typedef struct _haxe__macro__$ExprDef *haxe__macro__$ExprDef;
#include <hl/Enum.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/natives.h>
#include <hl/types/ArrayObj.h>
#include <haxe/macro/Constant.h>
#include <haxe/macro/ExprDef.h>
#include <haxe/macro/Binop.h>
#include <haxe/macro/Unop.h>
#include <haxe/macro/FunctionKind.h>
#include <haxe/macro/ComplexType.h>
#include <haxe/macro/DisplayKind.h>


struct _haxe__macro__$ExprDef {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __ename__;
	hl_bytes_map* __emap__;
	hl__types__ArrayObj __constructs__;
	varray* __evalues__;
};
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
} haxe_macro_ExprDef_EConst;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
} haxe_macro_ExprDef_EArray;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	vvirtual* p1;
	vvirtual* p2;
} haxe_macro_ExprDef_EBinop;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	String p1;
} haxe_macro_ExprDef_EField;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
} haxe_macro_ExprDef_EParenthesis;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} haxe_macro_ExprDef_EObjectDecl;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} haxe_macro_ExprDef_EArrayDecl;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	hl__types__ArrayObj p1;
} haxe_macro_ExprDef_ECall;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	hl__types__ArrayObj p1;
} haxe_macro_ExprDef_ENew;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	bool p1;
	vvirtual* p2;
} haxe_macro_ExprDef_EUnop;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} haxe_macro_ExprDef_EVars;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	vvirtual* p1;
} haxe_macro_ExprDef_EFunction;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} haxe_macro_ExprDef_EBlock;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
} haxe_macro_ExprDef_EFor;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
	vvirtual* p2;
} haxe_macro_ExprDef_EIf;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
	bool p2;
} haxe_macro_ExprDef_EWhile;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	hl__types__ArrayObj p1;
	vvirtual* p2;
} haxe_macro_ExprDef_ESwitch;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	hl__types__ArrayObj p1;
} haxe_macro_ExprDef_ETry;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
} haxe_macro_ExprDef_EReturn;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
} haxe_macro_ExprDef_EUntyped;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
} haxe_macro_ExprDef_EThrow;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	venum* p1;
} haxe_macro_ExprDef_ECast;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	venum* p1;
} haxe_macro_ExprDef_EDisplay;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
} haxe_macro_ExprDef_EDisplayNew;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
	vvirtual* p2;
} haxe_macro_ExprDef_ETernary;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	venum* p1;
} haxe_macro_ExprDef_ECheckType;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
} haxe_macro_ExprDef_EMeta;
#endif

