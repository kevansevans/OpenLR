// Generated by HLC 4.1.5 (HL v5)
#ifndef INC_hxsl__Eval
#define INC_hxsl__Eval
typedef struct _hxsl__$Eval *hxsl__$Eval;
typedef struct _hxsl__Eval *hxsl__Eval;
#include <hxsl/VarKind.h>
#include <_std/String.h>
#include <hl/types/ArrayObj.h>
#include <hxsl/Type.h>
#include <hxsl/TExprDef.h>
#include <hxsl/Eval.h>
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <haxe/ds/ObjectMap.h>
#include <haxe/ds/IntMap.h>
#include <hxsl/FunctionKind.h>


typedef struct {
	HL__ENUM_CONSTRUCT__
	hxsl__Eval p0;
	vvirtual* p1;
	venum* p2;
} Enumt$ctx_6c00736;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hxsl__Eval p0;
	vvirtual* p1;
	vvirtual* p2;
} Enumt$ctx_0086fd8;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hxsl__Eval p0;
	vvirtual* p1;
} Enumt$ctx_799be2a;
struct _hxsl__$Eval {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
};
struct _hxsl__Eval {
	hl_type *$type;
	haxe__ds__ObjectMap varMap;
	bool inlineCalls;
	bool unrollLoops;
	bool eliminateConditionals;
	haxe__ds__IntMap constants;
	haxe__ds__ObjectMap funMap;
	vvirtual* curFun;
	bool markReturn;
};
#endif

