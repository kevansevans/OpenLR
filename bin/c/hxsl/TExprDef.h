// Generated by HLC 4.1.4 (HL v5)
#ifndef INC_hxsl__TExprDef
#define INC_hxsl__TExprDef
typedef struct _hxsl__$TExprDef *hxsl__$TExprDef;
#include <hl/Enum.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/natives.h>
#include <hl/types/ArrayObj.h>
#include <hxsl/Const.h>
#include <hxsl/TExprDef.h>
#include <hxsl/VarKind.h>
#include <hxsl/Type.h>
#include <hxsl/TGlobal.h>
#include <haxe/macro/Binop.h>
#include <haxe/macro/Unop.h>


struct _hxsl__$TExprDef {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __ename__;
	hl_bytes_map* __emap__;
	hl__types__ArrayObj __constructs__;
	varray* __evalues__;
};
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
} hxsl_TExprDef_TConst;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
} hxsl_TExprDef_TVar;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
} hxsl_TExprDef_TGlobal;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
} hxsl_TExprDef_TParenthesis;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} hxsl_TExprDef_TBlock;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	vvirtual* p1;
	vvirtual* p2;
} hxsl_TExprDef_TBinop;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	vvirtual* p1;
} hxsl_TExprDef_TUnop;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
} hxsl_TExprDef_TVarDecl;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	hl__types__ArrayObj p1;
} hxsl_TExprDef_TCall;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	hl__types__ArrayObj p1;
} hxsl_TExprDef_TSwiz;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
	vvirtual* p2;
} hxsl_TExprDef_TIf;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
} hxsl_TExprDef_TReturn;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
	vvirtual* p2;
} hxsl_TExprDef_TFor;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
} hxsl_TExprDef_TArray;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} hxsl_TExprDef_TArrayDecl;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	hl__types__ArrayObj p1;
	vvirtual* p2;
} hxsl_TExprDef_TSwitch;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vvirtual* p0;
	vvirtual* p1;
	bool p2;
} hxsl_TExprDef_TWhile;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
	hl__types__ArrayObj p1;
	vvirtual* p2;
} hxsl_TExprDef_TMeta;
#endif

