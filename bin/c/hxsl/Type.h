// Generated by HLC 4.1.5 (HL v5)
#ifndef INC_hxsl__Type
#define INC_hxsl__Type
typedef struct _hxsl__$Type *hxsl__$Type;
#include <hl/Enum.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/natives.h>
#include <hl/types/ArrayObj.h>
#include <hxsl/VecType.h>
#include <hxsl/Type.h>
#include <hxsl/SizeDecl.h>


struct _hxsl__$Type {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __ename__;
	hl_bytes_map* __emap__;
	hl__types__ArrayObj __constructs__;
	varray* __evalues__;
};
typedef struct {
	HL__ENUM_CONSTRUCT__
	int p0;
	venum* p1;
} hxsl_Type_TVec;
typedef struct {
	HL__ENUM_CONSTRUCT__
	int p0;
} hxsl_Type_TBytes;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} hxsl_Type_TStruct;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} hxsl_Type_TFun;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	venum* p1;
} hxsl_Type_TArray;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	venum* p1;
} hxsl_Type_TBuffer;
typedef struct {
	HL__ENUM_CONSTRUCT__
	int p0;
} hxsl_Type_TChannel;
#endif

