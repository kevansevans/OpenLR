// Generated by HLC 4.1.5 (HL v5)
#ifndef INC_h3d__shader__Texture
#define INC_h3d__shader__Texture
typedef struct _h3d__shader__$Texture *h3d__shader__$Texture;
typedef struct _h3d__shader__Texture *h3d__shader__Texture;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hxsl/SharedShader.h>
#include <hxsl/Shader.h>
#include <hxsl/ShaderInstance.h>
#include <h3d/mat/Texture.h>


struct _h3d__shader__$Texture {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	String SRC;
	hxsl__SharedShader _SHADER;
};
struct _h3d__shader__Texture {
	hl_type *$type;
	int priority;
	hxsl__SharedShader shader;
	hxsl__ShaderInstance instance;
	int constBits;
	bool constModified;
	bool additive__;
	bool killAlpha__;
	bool specularAlpha__;
	double killAlphaThreshold__;
	h3d__mat__Texture texture__;
};
#endif

