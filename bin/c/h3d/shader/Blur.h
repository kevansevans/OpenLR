// Generated by HLC 4.1.4 (HL v5)
#ifndef INC_h3d__shader__Blur
#define INC_h3d__shader__Blur
typedef struct _h3d__shader__$Blur *h3d__shader__$Blur;
typedef struct _h3d__shader__Blur *h3d__shader__Blur;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hxsl/SharedShader.h>
#include <h3d/shader/ScreenShader.h>
#include <hxsl/Shader.h>
#include <hxsl/ShaderInstance.h>
#include <h3d/Matrix.h>
#include <h3d/mat/Texture.h>
#include <hl/types/ArrayBytes_Float.h>
#include <h3d/Vector.h>


struct _h3d__shader__$Blur {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	String SRC;
	hxsl__SharedShader _SHADER;
};
struct _h3d__shader__Blur {
	hl_type *$type;
	int priority;
	hxsl__SharedShader shader;
	hxsl__ShaderInstance instance;
	int constBits;
	bool constModified;
	double flipY__;
	h3d__Matrix cameraInverseViewProj__;
	h3d__mat__Texture texture__;
	h3d__mat__Texture depthTexture__;
	int Quality__;
	bool isDepth__;
	hl__types__ArrayBytes_Float values__;
	hl__types__ArrayBytes_Float offsets__;
	h3d__Vector pixel__;
	bool hasFixedColor__;
	bool smoothFixedColor__;
	h3d__Vector fixedColor__;
	bool isDepthDependant__;
	bool hasNormal__;
	h3d__mat__Texture normalTexture__;
	bool isCube__;
	h3d__mat__Texture cubeTexture__;
	h3d__Matrix cubeDir__;
};
#endif

