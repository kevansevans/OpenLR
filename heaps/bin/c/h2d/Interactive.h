// Generated by HLC 4.1.5 (HL v5)
#ifndef INC_h2d__Interactive
#define INC_h2d__Interactive
typedef struct _h2d__$Interactive *h2d__$Interactive;
typedef struct _h2d__Interactive *h2d__Interactive;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <h2d/Drawable.h>
#include <h2d/Object.h>
#include <hl/types/ArrayObj.h>
#include <h2d/filter/Filter.h>
#include <h2d/BlendMode.h>
#include <h3d/Vector.h>
#include <hxsl/ShaderList.h>
#include <hxd/Cursor.h>
#include <h2d/Scene.h>
#include <h2d/Mask.h>
#include <h2d/col/Point.h>
#include <hxd/Event.h>
#include <hxd/SceneEvents.h>


struct _h2d__$Interactive {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
};
struct _h2d__Interactive {
	hl_type *$type;
	hl__types__ArrayObj children;
	h2d__Object parentContainer;
	h2d__Object parent;
	double x;
	double y;
	double scaleX;
	double scaleY;
	double rotation;
	bool visible;
	double alpha;
	h2d__filter__Filter filter;
	venum* blendMode;
	double matA;
	double matB;
	double matC;
	double matD;
	double absX;
	double absY;
	bool posChanged;
	bool allocated;
	int lastFrame;
	h3d__Vector color;
	vdynamic* smooth;
	bool tileWrap;
	hxsl__ShaderList shaders;
	double width;
	double height;
	venum* cursor;
	bool isEllipse;
	bool cancelEvents;
	bool propagateEvents;
	vdynamic* backgroundColor;
	bool enableRightButton;
	h2d__Scene scene;
	int mouseDownButton;
	h2d__Mask parentMask;
	double invDet;
	vvirtual* shape;
	double shapeX;
	double shapeY;
	vclosure* onOver;
	vclosure* onOut;
	vclosure* onPush;
	vclosure* onRelease;
	vclosure* onReleaseOutside;
	vclosure* onClick;
	vclosure* onMove;
	vclosure* onWheel;
	vclosure* onFocus;
	vclosure* onFocusLost;
	vclosure* onKeyUp;
	vclosure* onKeyDown;
	vclosure* onCheck;
	vclosure* onTextInput;
	vvirtual* f$54;
};
#endif

