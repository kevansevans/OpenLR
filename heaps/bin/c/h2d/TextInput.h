// Generated by HLC 4.1.5 (HL v5)
#ifndef INC_h2d__TextInput
#define INC_h2d__TextInput
typedef struct _h2d__$TextInput *h2d__$TextInput;
typedef struct _h2d__TextInput *h2d__TextInput;
#include <h2d/col/Point.h>
#include <h2d/Scene.h>
#include <h2d/TextInput.h>
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <h2d/Text.h>
#include <h2d/Drawable.h>
#include <h2d/Object.h>
#include <hl/types/ArrayObj.h>
#include <h2d/filter/Filter.h>
#include <h2d/BlendMode.h>
#include <h3d/Vector.h>
#include <hxsl/ShaderList.h>
#include <h2d/Font.h>
#include <h2d/Align.h>
#include <h2d/TileGroup.h>
#include <h3d/shader/SignedDistanceField.h>
#include <h2d/Tile.h>
#include <h2d/Interactive.h>
#include <hxd/Event.h>


typedef struct {
	HL__ENUM_CONSTRUCT__
	h2d__TextInput p0;
	int p1;
	h2d__col__Point p2;
	h2d__Scene p3;
} Enumt$ctx_ac38764;
struct _h2d__$TextInput {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
};
struct _h2d__TextInput {
	hl_type *$type;
	hl__types__ArrayObj children;
	h2d__Object parentContainer;
	h2d__Object parent;
	double x;
	double y;
	double scaleX;
	double scaleY;
	double rotation;
	bool visible;
	double alpha;
	h2d__filter__Filter filter;
	venum* blendMode;
	double matA;
	double matB;
	double matC;
	double matD;
	double absX;
	double absY;
	bool posChanged;
	bool allocated;
	int lastFrame;
	h3d__Vector color;
	vdynamic* smooth;
	bool tileWrap;
	hxsl__ShaderList shaders;
	h2d__Font font;
	String text;
	int textColor;
	vdynamic* maxWidth;
	vvirtual* dropShadow;
	double textWidth;
	double textHeight;
	venum* textAlign;
	double letterSpacing;
	double lineSpacing;
	h2d__TileGroup glyphs;
	bool needsRebuild;
	String currentText;
	bool textChanged;
	bool calcDone;
	double calcXMin;
	double calcYMin;
	double calcWidth;
	double calcHeight;
	double calcSizeHeight;
	double constraintWidth;
	double realMaxWidth;
	h3d__shader__SignedDistanceField sdfShader;
	int cursorIndex;
	h2d__Tile cursorTile;
	h2d__Tile selectionTile;
	double cursorBlinkTime;
	vdynamic* inputWidth;
	vvirtual* selectionRange;
	bool canEdit;
	h2d__Interactive interactive;
	String cursorText;
	double cursorX;
	int cursorXIndex;
	double cursorBlink;
	double scrollX;
	double selectionPos;
	double selectionSize;
	hl__types__ArrayObj undo;
	hl__types__ArrayObj redo;
	double lastChange;
	double lastClick;
	int maxHistorySize;
	vclosure* onOut;
	vclosure* onOver;
	vclosure* onMove;
	vclosure* onClick;
	vclosure* onPush;
	vclosure* onRelease;
	vclosure* onKeyDown;
	vclosure* onKeyUp;
	vclosure* onTextInput;
	vclosure* onFocus;
	vclosure* onFocusLost;
	vclosure* onChange;
};
#endif

