// Generated by HLC 4.1.5 (HL v5)
#ifndef INC_hscript__Error
#define INC_hscript__Error
typedef struct _hscript__$Error *hscript__$Error;
#include <hl/Enum.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/natives.h>
#include <hl/types/ArrayObj.h>
#include <hscript/Error.h>


struct _hscript__$Error {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __ename__;
	hl_bytes_map* __emap__;
	hl__types__ArrayObj __constructs__;
	varray* __evalues__;
};
typedef struct {
	HL__ENUM_CONSTRUCT__
	int p0;
} hscript_Error_EInvalidChar;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} hscript_Error_EUnexpected;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} hscript_Error_EInvalidPreprocessor;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} hscript_Error_EUnknownVariable;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} hscript_Error_EInvalidIterator;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} hscript_Error_EInvalidOp;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} hscript_Error_EInvalidAccess;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} hscript_Error_ECustom;
#endif

