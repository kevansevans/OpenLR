// Generated by HLC 4.1.5 (HL v5)
#ifndef INC_hscript__CType
#define INC_hscript__CType
typedef struct _hscript__$CType *hscript__$CType;
#include <hl/Enum.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/natives.h>
#include <hl/types/ArrayObj.h>
#include <hscript/CType.h>


struct _hscript__$CType {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __ename__;
	hl_bytes_map* __emap__;
	hl__types__ArrayObj __constructs__;
	varray* __evalues__;
};
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
	hl__types__ArrayObj p1;
} hscript_CType_CTPath;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
	venum* p1;
} hscript_CType_CTFun;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} hscript_CType_CTAnon;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
} hscript_CType_CTParent;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
} hscript_CType_CTOpt;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
	venum* p1;
} hscript_CType_CTNamed;
#endif

