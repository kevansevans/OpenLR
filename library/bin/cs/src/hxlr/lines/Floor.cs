// Generated by Haxe 4.1.5

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxlr.lines {
	public class Floor : global::hxlr.lines.LineObject {
		
		public Floor(global::haxe.lang.EmptyObject empty) : base(global::haxe.lang.EmptyObject.EMPTY) {
		}
		
		
		public Floor(global::hxlr.math.geom.Point _start, global::hxlr.math.geom.Point _end, bool _shift) : base(global::haxe.lang.EmptyObject.EMPTY) {
			global::hxlr.lines.Floor.__hx_ctor_hxlr_lines_Floor(this, _start, _end, _shift);
		}
		
		
		protected static void __hx_ctor_hxlr_lines_Floor(global::hxlr.lines.Floor __hx_this, global::hxlr.math.geom.Point _start, global::hxlr.math.geom.Point _end, bool _shift) {
			global::hxlr.lines.LineObject.__hx_ctor_hxlr_lines_LineObject(__hx_this, _start, _end, _shift, default(global::haxe.lang.Null<int>));
			__hx_this.type = 0;
			__hx_this.tangible = true;
		}
		
		
		public override void collide(global::hxlr.rider.ContactPoint _point) {
			unchecked {
				double _loc5 = ( _point.pos.x - this.start.x );
				double _loc6 = ( _point.pos.y - this.start.y );
				double _loc4 = ( ( this.nx * _loc5 ) + ( this.ny * _loc6 ) );
				double _loc7 = ( (( ( _loc5 * this.dx ) + ( _loc6 * this.dy ) )) * this.invSqrDistance );
				if (( ( ( _point.dir.x * this.nx ) + ( _point.dir.y * this.ny ) ) > 0 )) {
					if (( ( ( ( _loc4 > 0 ) && ( _loc4 < this.zone ) ) && ( _loc7 >= this.limStart ) ) && ( _loc7 <= this.limEnd ) )) {
						_point.pos.x -= ( _loc4 * this.nx );
						_point.pos.y -= ( _loc4 * this.ny );
						_point.vel.x += ( ( ( this.ny * _point.friction ) * _loc4 ) * (( (( _point.vel.x < _point.pos.x )) ? (1) : (-1) )) );
						_point.vel.y -= ( ( ( this.nx * _point.friction ) * _loc4 ) * (( (( _point.vel.y < _point.pos.y )) ? (-1) : (1) )) );
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1835249534:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "collide", 1835249534)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
	}
}


