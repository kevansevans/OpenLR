// Generated by Haxe 4.1.5

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxlr.rider {
	public class Stick : global::haxe.lang.HxObject {
		
		public Stick(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Stick(global::hxlr.rider.ContactPoint _a, global::hxlr.rider.ContactPoint _b, string _type, global::hxlr.rider.RiderBase _rider) {
			global::hxlr.rider.Stick.__hx_ctor_hxlr_rider_Stick(this, _a, _b, _type, _rider);
		}
		
		
		protected static void __hx_ctor_hxlr_rider_Stick(global::hxlr.rider.Stick __hx_this, global::hxlr.rider.ContactPoint _a, global::hxlr.rider.ContactPoint _b, string _type, global::hxlr.rider.RiderBase _rider) {
			__hx_this.crashable = false;
			__hx_this.broken = false;
			__hx_this.breakable = false;
			__hx_this.enabled = true;
			{
				__hx_this.a = _a;
				__hx_this.b = _b;
				__hx_this.set_type(_type);
				__hx_this.rider = _rider;
				__hx_this.endurance = ( ( 0.057 * __hx_this.restLength ) * 0.5 );
			}
			
		}
		
		
		public global::hxlr.rider.ContactPoint a;
		
		public global::hxlr.rider.ContactPoint b;
		
		public double restLength;
		
		public bool enabled;
		
		public bool breakable;
		
		public bool broken;
		
		public bool crashable;
		
		public double endurance;
		
		public global::haxe.lang.Function constrain;
		
		public string type;
		
		public global::hxlr.rider.RiderBase rider;
		
		public virtual void satisfy(global::haxe.lang.Null<bool> _crashed) {
			if ( ! (this.enabled) ) {
				return;
			}
			
			bool result = global::haxe.lang.Runtime.toBool(this.constrain.__hx_invoke1_o(default(double), (_crashed).toDynamic()));
			if (this.breakable) {
				this.broken = result;
			}
			
			if (this.crashable) {
				global::haxe.lang.Null<bool> __temp_expr1 = new global::haxe.lang.Null<bool>(this.rider.set_crashed(result), true);
			}
			
		}
		
		
		public virtual bool noConstrain(global::haxe.lang.Null<bool> _crashed) {
			return (_crashed).@value;
		}
		
		
		public virtual bool standard(global::haxe.lang.Null<bool> _crashed) {
			double xDist = ( this.a.pos.x - this.b.pos.x );
			double yDist = ( this.a.pos.y - this.b.pos.y );
			double dist = global::System.Math.Sqrt(((double) (( ( xDist * xDist ) + ( yDist * yDist ) )) ));
			double adjust = ((double) (0) );
			if (( dist != 0 )) {
				adjust = ( ( (( dist - this.restLength )) / dist ) * 0.5 );
			}
			
			if (( this.crashable || this.breakable )) {
				if ( ! (this.rider.invincible) ) {
					if (( ( ( adjust > this.endurance ) || (_crashed).@value ) || this.broken )) {
						return true;
					}
					
				}
				
			}
			
			double xAdjust = ( xDist * adjust );
			double yAdjust = ( yDist * adjust );
			this.a.pos.x -= xAdjust;
			this.a.pos.y -= yAdjust;
			this.b.pos.x += xAdjust;
			this.b.pos.y += yAdjust;
			return (_crashed).@value;
		}
		
		
		public virtual bool repell(global::haxe.lang.Null<bool> _crashed) {
			double xDist = ( this.a.pos.x - this.b.pos.x );
			double yDist = ( this.a.pos.y - this.b.pos.y );
			double dist = global::System.Math.Sqrt(((double) (( ( xDist * xDist ) + ( yDist * yDist ) )) ));
			if (( dist < this.restLength )) {
				double adjust = ((double) (0) );
				if (( dist != 0 )) {
					adjust = ( ( (( dist - this.restLength )) / dist ) * 0.5 );
				}
				
				if (( this.crashable || this.breakable )) {
					if ( ! (this.rider.invincible) ) {
						if (( ( ( adjust > this.endurance ) || (_crashed).@value ) || this.broken )) {
							return true;
						}
						
					}
					
				}
				
				double xAdjust = ( xDist * adjust );
				double yAdjust = ( yDist * adjust );
				this.a.pos.x -= xAdjust;
				this.a.pos.y -= yAdjust;
				this.b.pos.x += xAdjust;
				this.b.pos.y += yAdjust;
			}
			
			return (_crashed).@value;
		}
		
		
		public virtual bool attract(global::haxe.lang.Null<bool> _crashed) {
			double xDist = ( this.a.pos.x - this.b.pos.x );
			double yDist = ( this.a.pos.y - this.b.pos.y );
			double dist = global::System.Math.Sqrt(((double) (( ( xDist * xDist ) + ( yDist * yDist ) )) ));
			if (( dist > this.restLength )) {
				double adjust = ((double) (0) );
				if (( dist != 0 )) {
					adjust = ( ( (( dist - this.restLength )) / dist ) * 0.5 );
				}
				
				if (( this.crashable || this.breakable )) {
					if ( ! (this.rider.invincible) ) {
						if (( ( ( adjust > this.endurance ) || (_crashed).@value ) || this.broken )) {
							return true;
						}
						
					}
					
				}
				
				double xAdjust = ( xDist * adjust );
				double yAdjust = ( yDist * adjust );
				this.a.pos.x -= xAdjust;
				this.a.pos.y -= yAdjust;
				this.b.pos.x += xAdjust;
				this.b.pos.y += yAdjust;
			}
			
			return (_crashed).@value;
		}
		
		
		public virtual bool scarf(global::haxe.lang.Null<bool> _crashed) {
			double xDist = ( this.a.pos.x - this.b.pos.x );
			double yDist = ( this.a.pos.y - this.b.pos.y );
			double dist = global::System.Math.Sqrt(((double) (( ( xDist * xDist ) + ( yDist * yDist ) )) ));
			global::haxe.lang.Null<double> adjust = default(global::haxe.lang.Null<double>);
			if (( dist == 0 )) {
				adjust = new global::haxe.lang.Null<double>(((double) (0) ), true);
			}
			else {
				adjust = new global::haxe.lang.Null<double>(( ( (( dist - this.restLength )) / dist ) * 0.5 ), true);
			}
			
			double xAdjust = ( xDist * (adjust).@value );
			double yAdjust = ( yDist * (adjust).@value );
			this.b.pos.x += xAdjust;
			this.b.pos.y += yAdjust;
			return (_crashed).@value;
		}
		
		
		public virtual string set_type(string @value) {
			this.setRestLength();
			if (( ( @value == "REPELL" ) || ( @value == "ATTRACT" ) )) {
				this.restLength *= 0.5;
			}
			
			switch (@value) {
				case "REPELL":
				{
					this.constrain = ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "repell", 108830952)) );
					break;
				}
				
				
				case "SCARF":
				{
					this.constrain = ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "scarf", 2026820549)) );
					break;
				}
				
				
				case "STANDARD":
				{
					this.constrain = ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "standard", 1786263357)) );
					break;
				}
				
				
				default:
				{
					this.constrain = ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "noConstrain", 827137974)) );
					break;
				}
				
			}
			
			return this.type = @value;
		}
		
		
		public virtual void setRestLength() {
			double x = ( this.a.pos.x - this.b.pos.x );
			double y = ( this.a.pos.y - this.b.pos.y );
			this.restLength = global::System.Math.Sqrt(((double) (( ( x * x ) + ( y * y ) )) ));
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 925807559:
					{
						this.endurance = ((double) (@value) );
						return @value;
					}
					
					
					case 929491738:
					{
						this.restLength = ((double) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1768014458:
					{
						this.rider = ((global::hxlr.rider.RiderBase) (@value) );
						return @value;
					}
					
					
					case 1292432058:
					{
						if (handleProperties) {
							this.set_type(global::haxe.lang.Runtime.toString(@value));
							return @value;
						}
						else {
							this.type = global::haxe.lang.Runtime.toString(@value);
							return @value;
						}
						
					}
					
					
					case 1335767095:
					{
						this.constrain = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					case 925807559:
					{
						this.endurance = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 1788062977:
					{
						this.crashable = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 475510357:
					{
						this.broken = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1170169305:
					{
						this.breakable = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 2117141633:
					{
						this.enabled = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 929491738:
					{
						this.restLength = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 98:
					{
						this.b = ((global::hxlr.rider.ContactPoint) (@value) );
						return @value;
					}
					
					
					case 97:
					{
						this.a = ((global::hxlr.rider.ContactPoint) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1491020124:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setRestLength", 1491020124)) );
					}
					
					
					case 2065762231:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_type", 2065762231)) );
					}
					
					
					case 2026820549:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "scarf", 2026820549)) );
					}
					
					
					case 958884033:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "attract", 958884033)) );
					}
					
					
					case 108830952:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "repell", 108830952)) );
					}
					
					
					case 1786263357:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "standard", 1786263357)) );
					}
					
					
					case 827137974:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "noConstrain", 827137974)) );
					}
					
					
					case 117221091:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "satisfy", 117221091)) );
					}
					
					
					case 1768014458:
					{
						return this.rider;
					}
					
					
					case 1292432058:
					{
						return this.type;
					}
					
					
					case 1335767095:
					{
						return this.constrain;
					}
					
					
					case 925807559:
					{
						return this.endurance;
					}
					
					
					case 1788062977:
					{
						return this.crashable;
					}
					
					
					case 475510357:
					{
						return this.broken;
					}
					
					
					case 1170169305:
					{
						return this.breakable;
					}
					
					
					case 2117141633:
					{
						return this.enabled;
					}
					
					
					case 929491738:
					{
						return this.restLength;
					}
					
					
					case 98:
					{
						return this.b;
					}
					
					
					case 97:
					{
						return this.a;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 925807559:
					{
						return this.endurance;
					}
					
					
					case 929491738:
					{
						return this.restLength;
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1491020124:
					{
						this.setRestLength();
						break;
					}
					
					
					case 2065762231:
					{
						return this.set_type(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 2026820549:
					{
						return this.scarf(global::haxe.lang.Null<object>.ofDynamic<bool>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
					}
					
					
					case 958884033:
					{
						return this.attract(global::haxe.lang.Null<object>.ofDynamic<bool>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
					}
					
					
					case 108830952:
					{
						return this.repell(global::haxe.lang.Null<object>.ofDynamic<bool>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
					}
					
					
					case 1786263357:
					{
						return this.standard(global::haxe.lang.Null<object>.ofDynamic<bool>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
					}
					
					
					case 827137974:
					{
						return this.noConstrain(global::haxe.lang.Null<object>.ofDynamic<bool>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
					}
					
					
					case 117221091:
					{
						this.satisfy(global::haxe.lang.Null<object>.ofDynamic<bool>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("rider");
			baseArr.push("type");
			baseArr.push("constrain");
			baseArr.push("endurance");
			baseArr.push("crashable");
			baseArr.push("broken");
			baseArr.push("breakable");
			baseArr.push("enabled");
			baseArr.push("restLength");
			baseArr.push("b");
			baseArr.push("a");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


