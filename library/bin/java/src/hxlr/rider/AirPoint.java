// Generated by Haxe 4.1.5
package hxlr.rider;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class AirPoint extends hxlr.rider.ContactPoint
{
	public AirPoint(haxe.lang.EmptyObject empty)
	{
		//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		super(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public AirPoint(double _x, double _y, double _af)
	{
		//line 16 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		super(haxe.lang.EmptyObject.EMPTY);
		//line 16 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		hxlr.rider.AirPoint.__hx_ctor_hxlr_rider_AirPoint(this, _x, _y, _af);
	}
	
	
	protected static void __hx_ctor_hxlr_rider_AirPoint(hxlr.rider.AirPoint __hx_this, double _x, double _y, double _af)
	{
		//line 16 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		hxlr.rider.ContactPoint.__hx_ctor_hxlr_rider_ContactPoint(__hx_this, _x, _y, null);
		//line 18 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		__hx_this.friction = _af;
	}
	
	
	@Override public void iterate(hxlr.math.geom.Point _gravity)
	{
		//line 25 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		hxlr.math.geom.Point g = ( (( _gravity == null )) ? (this.gravity) : (_gravity) );
		//line 27 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		this.dir.x = ( ( (( this.pos.x - this.vel.x )) * this.friction ) + g.x );
		//line 28 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		this.dir.y = ( ( (( this.pos.y - this.vel.y )) * this.friction ) + g.y );
		//line 30 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		this.vel = this.pos.clone();
		//line 32 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		this.pos = this.pos.add(this.dir);
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
		{
			//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
			if (( field != null )) 
			{
				//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
				switch (field.hashCode())
				{
					case 2116356218:
					{
						//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
						if (field.equals("iterate")) 
						{
							//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
							__temp_executeDef1 = false;
							//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "iterate")) );
						}
						
						//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 10 "F:\\OpenLR\\library\\src\\hxlr\\rider\\AirPoint.hx"
				throw null;
			}
			
		}
		
	}
	
	
}


