// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_hxlr_Constants
#include <hxlr/Constants.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e6f297674bd0794a_108_new,"hxlr.Constants","new",0x91be4e09,"hxlr.Constants.new","hxlr/Constants.hx",108,0x21ab8308)
HX_LOCAL_STACK_FRAME(_hx_pos_e6f297674bd0794a_23_defaultRider,"hxlr.Constants","defaultRider",0xddc40330,"hxlr.Constants.defaultRider","hxlr/Constants.hx",23,0x21ab8308)
static const int _hx_array_data_5c129597_2[] = {
	(int)13763074,(int)16777215,(int)13763074,(int)16777215,(int)13763074,(int)16777215,(int)13763074,(int)16777215,(int)13763074,(int)16777215,(int)13763074,
};
HX_LOCAL_STACK_FRAME(_hx_pos_e6f297674bd0794a_13_boot,"hxlr.Constants","boot",0xecdefa69,"hxlr.Constants.boot","hxlr/Constants.hx",13,0x21ab8308)
HX_LOCAL_STACK_FRAME(_hx_pos_e6f297674bd0794a_14_boot,"hxlr.Constants","boot",0xecdefa69,"hxlr.Constants.boot","hxlr/Constants.hx",14,0x21ab8308)
HX_LOCAL_STACK_FRAME(_hx_pos_e6f297674bd0794a_16_boot,"hxlr.Constants","boot",0xecdefa69,"hxlr.Constants.boot","hxlr/Constants.hx",16,0x21ab8308)
HX_LOCAL_STACK_FRAME(_hx_pos_e6f297674bd0794a_17_boot,"hxlr.Constants","boot",0xecdefa69,"hxlr.Constants.boot","hxlr/Constants.hx",17,0x21ab8308)
HX_LOCAL_STACK_FRAME(_hx_pos_e6f297674bd0794a_18_boot,"hxlr.Constants","boot",0xecdefa69,"hxlr.Constants.boot","hxlr/Constants.hx",18,0x21ab8308)
HX_LOCAL_STACK_FRAME(_hx_pos_e6f297674bd0794a_19_boot,"hxlr.Constants","boot",0xecdefa69,"hxlr.Constants.boot","hxlr/Constants.hx",19,0x21ab8308)
namespace hxlr{

void Constants_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_e6f297674bd0794a_108_new)
            	}

Dynamic Constants_obj::__CreateEmpty() { return new Constants_obj; }

void *Constants_obj::_hx_vtable = 0;

Dynamic Constants_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Constants_obj > _hx_result = new Constants_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Constants_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x209dbe35;
}

int Constants_obj::minLineSize;

int Constants_obj::minSnapDistance;

Float Constants_obj::x_gravity;

Float Constants_obj::y_gravity;

Float Constants_obj::x_velocity;

Float Constants_obj::y_velocity;

 ::Dynamic Constants_obj::defaultRider(){
            	HX_STACKFRAME(&_hx_pos_e6f297674bd0794a_23_defaultRider)
HXLINE(  24)		 ::Dynamic rider =  ::Dynamic(::hx::Anon_obj::Create(12)
            			->setFixed(0,HX_("bones",af,58,f7,b6),::Array_obj< ::Dynamic>::__new(22)->init(0, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),0)
            				->setFixed(2,HX_("b",62,00,00,00),1)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(1, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),1)
            				->setFixed(2,HX_("b",62,00,00,00),2)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(2, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),2)
            				->setFixed(2,HX_("b",62,00,00,00),3)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(3, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),3)
            				->setFixed(2,HX_("b",62,00,00,00),0)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(4, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),0)
            				->setFixed(2,HX_("b",62,00,00,00),2)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(5, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),3)
            				->setFixed(2,HX_("b",62,00,00,00),1)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(6, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),true)
            				->setFixed(1,HX_("a",61,00,00,00),0)
            				->setFixed(2,HX_("b",62,00,00,00),4)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(7, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),true)
            				->setFixed(1,HX_("a",61,00,00,00),1)
            				->setFixed(2,HX_("b",62,00,00,00),4)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(8, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),true)
            				->setFixed(1,HX_("a",61,00,00,00),2)
            				->setFixed(2,HX_("b",62,00,00,00),4)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(9, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),5)
            				->setFixed(2,HX_("b",62,00,00,00),4)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(10, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),5)
            				->setFixed(2,HX_("b",62,00,00,00),6)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(11, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),5)
            				->setFixed(2,HX_("b",62,00,00,00),7)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(12, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),4)
            				->setFixed(2,HX_("b",62,00,00,00),8)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(13, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),4)
            				->setFixed(2,HX_("b",62,00,00,00),9)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(14, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),5)
            				->setFixed(2,HX_("b",62,00,00,00),7)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(15, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),true)
            				->setFixed(1,HX_("a",61,00,00,00),5)
            				->setFixed(2,HX_("b",62,00,00,00),0)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(16, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),true)
            				->setFixed(1,HX_("a",61,00,00,00),3)
            				->setFixed(2,HX_("b",62,00,00,00),6)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(17, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),true)
            				->setFixed(1,HX_("a",61,00,00,00),3)
            				->setFixed(2,HX_("b",62,00,00,00),7)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(18, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),true)
            				->setFixed(1,HX_("a",61,00,00,00),8)
            				->setFixed(2,HX_("b",62,00,00,00),2)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(19, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),true)
            				->setFixed(1,HX_("a",61,00,00,00),9)
            				->setFixed(2,HX_("b",62,00,00,00),2)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("STANDARD",3d,c7,fd,43))))->init(20, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),5)
            				->setFixed(2,HX_("b",62,00,00,00),8)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("REPELL",e8,4c,ff,b8))))->init(21, ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("crashable",01,ad,93,ea),false)
            				->setFixed(1,HX_("a",61,00,00,00),5)
            				->setFixed(2,HX_("b",62,00,00,00),9)
            				->setFixed(3,HX_("type",ba,f2,08,4d),HX_("REPELL",e8,4c,ff,b8)))))
            			->setFixed(1,HX_("camera",a5,46,8c,b7),4)
            			->setFixed(2,HX_("colors",b0,c5,86,c6),::Array_obj< int >::fromData( _hx_array_data_5c129597_2,11))
            			->setFixed(3,HX_("scarfAnchor",1a,24,39,cd),5)
            			->setFixed(4,HX_("y_vel",57,58,a1,ea),::hxlr::Constants_obj::y_velocity)
            			->setFixed(5,HX_("limits",d8,34,fa,eb),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(6)
            				->setFixed(0,HX_("lessThan",5a,5f,34,f3),true)
            				->setFixed(1,HX_("threshold",ab,c3,a3,34),0)
            				->setFixed(2,HX_("point_a",72,bb,21,51),3)
            				->setFixed(3,HX_("point_b",73,bb,21,51),0)
            				->setFixed(4,HX_("point_c",74,bb,21,51),1)
            				->setFixed(5,HX_("point_d",75,bb,21,51),0))))
            			->setFixed(6,HX_("x_grav",47,38,50,f2),::hxlr::Constants_obj::x_gravity)
            			->setFixed(7,HX_("contactPoints",e3,b8,38,0c),::Array_obj< ::Dynamic>::__new(10)->init(0, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(0) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(0) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.8))))->init(1, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(0) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),( (Float)(0) ))))->init(2, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(30) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),( (Float)(0) ))))->init(3, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(35) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(0) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),( (Float)(0) ))))->init(4, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(10) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(0) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.8))))->init(5, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(10) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(-11) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.8))))->init(6, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(23) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(-10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.1))))->init(7, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(23) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(-10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.1))))->init(8, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(20) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),( (Float)(0) ))))->init(9, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(20) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),( (Float)(0) )))))
            			->setFixed(8,HX_("x_vel",d6,c3,3a,57),::hxlr::Constants_obj::x_velocity)
            			->setFixed(9,HX_("y_grav",a6,94,ab,58),::hxlr::Constants_obj::y_gravity)
            			->setFixed(10,HX_("scarfPoints",c8,fb,f5,63),::Array_obj< ::Dynamic>::__new(6)->init(0, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(7) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(-10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.9))))->init(1, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(3) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(-10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.9))))->init(2, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(0) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(-10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.9))))->init(3, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(-4) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(-10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.9))))->init(4, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(-7) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(-10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.9))))->init(5, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),( (Float)(-11) ))
            				->setFixed(1,HX_("y",79,00,00,00),( (Float)(-10) ))
            				->setFixed(2,HX_("fr",4c,59,00,00),((Float)0.9)))))
            			->setFixed(11,HX_("scale",8a,ce,ce,78),((Float)0.5)));
HXLINE( 104)		return rider;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Constants_obj,defaultRider,return )


Constants_obj::Constants_obj()
{
}

bool Constants_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"x_gravity") ) { outValue = ( x_gravity ); return true; }
		if (HX_FIELD_EQ(inName,"y_gravity") ) { outValue = ( y_gravity ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"x_velocity") ) { outValue = ( x_velocity ); return true; }
		if (HX_FIELD_EQ(inName,"y_velocity") ) { outValue = ( y_velocity ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"minLineSize") ) { outValue = ( minLineSize ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"defaultRider") ) { outValue = defaultRider_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"minSnapDistance") ) { outValue = ( minSnapDistance ); return true; }
	}
	return false;
}

bool Constants_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"x_gravity") ) { x_gravity=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"y_gravity") ) { y_gravity=ioValue.Cast< Float >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"x_velocity") ) { x_velocity=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"y_velocity") ) { y_velocity=ioValue.Cast< Float >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"minLineSize") ) { minLineSize=ioValue.Cast< int >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"minSnapDistance") ) { minSnapDistance=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Constants_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Constants_obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &Constants_obj::minLineSize,HX_("minLineSize",87,9e,28,c4)},
	{::hx::fsInt,(void *) &Constants_obj::minSnapDistance,HX_("minSnapDistance",51,70,13,5d)},
	{::hx::fsFloat,(void *) &Constants_obj::x_gravity,HX_("x_gravity",47,00,e1,92)},
	{::hx::fsFloat,(void *) &Constants_obj::y_gravity,HX_("y_gravity",48,69,d2,65)},
	{::hx::fsFloat,(void *) &Constants_obj::x_velocity,HX_("x_velocity",04,2a,7c,89)},
	{::hx::fsFloat,(void *) &Constants_obj::y_velocity,HX_("y_velocity",e3,a1,c6,49)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Constants_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Constants_obj::minLineSize,"minLineSize");
	HX_MARK_MEMBER_NAME(Constants_obj::minSnapDistance,"minSnapDistance");
	HX_MARK_MEMBER_NAME(Constants_obj::x_gravity,"x_gravity");
	HX_MARK_MEMBER_NAME(Constants_obj::y_gravity,"y_gravity");
	HX_MARK_MEMBER_NAME(Constants_obj::x_velocity,"x_velocity");
	HX_MARK_MEMBER_NAME(Constants_obj::y_velocity,"y_velocity");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Constants_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Constants_obj::minLineSize,"minLineSize");
	HX_VISIT_MEMBER_NAME(Constants_obj::minSnapDistance,"minSnapDistance");
	HX_VISIT_MEMBER_NAME(Constants_obj::x_gravity,"x_gravity");
	HX_VISIT_MEMBER_NAME(Constants_obj::y_gravity,"y_gravity");
	HX_VISIT_MEMBER_NAME(Constants_obj::x_velocity,"x_velocity");
	HX_VISIT_MEMBER_NAME(Constants_obj::y_velocity,"y_velocity");
};

#endif

::hx::Class Constants_obj::__mClass;

static ::String Constants_obj_sStaticFields[] = {
	HX_("minLineSize",87,9e,28,c4),
	HX_("minSnapDistance",51,70,13,5d),
	HX_("x_gravity",47,00,e1,92),
	HX_("y_gravity",48,69,d2,65),
	HX_("x_velocity",04,2a,7c,89),
	HX_("y_velocity",e3,a1,c6,49),
	HX_("defaultRider",f9,fd,bc,9e),
	::String(null())
};

void Constants_obj::__register()
{
	Constants_obj _hx_dummy;
	Constants_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hxlr.Constants",97,95,12,5c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Constants_obj::__GetStatic;
	__mClass->mSetStaticField = &Constants_obj::__SetStatic;
	__mClass->mMarkFunc = Constants_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Constants_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Constants_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Constants_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Constants_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Constants_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Constants_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_e6f297674bd0794a_13_boot)
HXDLIN(  13)		minLineSize = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_e6f297674bd0794a_14_boot)
HXDLIN(  14)		minSnapDistance = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_e6f297674bd0794a_16_boot)
HXDLIN(  16)		x_gravity = ((Float)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e6f297674bd0794a_17_boot)
HXDLIN(  17)		y_gravity = ((Float)0.175);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e6f297674bd0794a_18_boot)
HXDLIN(  18)		x_velocity = ((Float)0.4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e6f297674bd0794a_19_boot)
HXDLIN(  19)		y_velocity = ((Float)0);
            	}
}

} // end namespace hxlr
