// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_hxlr_lines_LineBase
#include <hxlr/lines/LineBase.h>
#endif
#ifndef INCLUDED_hxlr_lines_Undefined
#include <hxlr/lines/Undefined.h>
#endif
#ifndef INCLUDED_hxlr_math_geom_Point
#include <hxlr/math/geom/Point.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_18f9ba7a1c9b47b2_14_new,"hxlr.lines.Undefined","new",0xe7ce31db,"hxlr.lines.Undefined.new","hxlr/lines/Undefined.hx",14,0x740593b7)
namespace hxlr{
namespace lines{

void Undefined_obj::__construct( ::hxlr::math::geom::Point _start, ::hxlr::math::geom::Point _end,bool _shift, ::Dynamic __o__lim){
            		 ::Dynamic _lim = __o__lim;
            		if (::hx::IsNull(__o__lim)) _lim = 0;
            	HX_STACKFRAME(&_hx_pos_18f9ba7a1c9b47b2_14_new)
HXDLIN(  14)		super::__construct(_start,_end,_shift,_lim);
            	}

Dynamic Undefined_obj::__CreateEmpty() { return new Undefined_obj; }

void *Undefined_obj::_hx_vtable = 0;

Dynamic Undefined_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Undefined_obj > _hx_result = new Undefined_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool Undefined_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x041acbee) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x041acbee;
	} else {
		return inClassId==(int)0x3bacb8a7;
	}
}


::hx::ObjectPtr< Undefined_obj > Undefined_obj::__new( ::hxlr::math::geom::Point _start, ::hxlr::math::geom::Point _end,bool _shift, ::Dynamic __o__lim) {
	::hx::ObjectPtr< Undefined_obj > __this = new Undefined_obj();
	__this->__construct(_start,_end,_shift,__o__lim);
	return __this;
}

::hx::ObjectPtr< Undefined_obj > Undefined_obj::__alloc(::hx::Ctx *_hx_ctx, ::hxlr::math::geom::Point _start, ::hxlr::math::geom::Point _end,bool _shift, ::Dynamic __o__lim) {
	Undefined_obj *__this = (Undefined_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Undefined_obj), true, "hxlr.lines.Undefined"));
	*(void **)__this = Undefined_obj::_hx_vtable;
	__this->__construct(_start,_end,_shift,__o__lim);
	return __this;
}

Undefined_obj::Undefined_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Undefined_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Undefined_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Undefined_obj::__mClass;

void Undefined_obj::__register()
{
	Undefined_obj _hx_dummy;
	Undefined_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hxlr.lines.Undefined",69,a8,0b,21);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Undefined_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Undefined_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Undefined_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hxlr
} // end namespace lines
