// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_hxlr_lines_LineObject
#include <hxlr/lines/LineObject.h>
#endif
#ifndef INCLUDED_hxlr_lines_Scenery
#include <hxlr/lines/Scenery.h>
#endif
#ifndef INCLUDED_hxlr_math_geom_Line
#include <hxlr/math/geom/Line.h>
#endif
#ifndef INCLUDED_hxlr_math_geom_Point
#include <hxlr/math/geom/Point.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7ef66b0669401619_13_new,"hxlr.lines.Scenery","new",0x6b13209e,"hxlr.lines.Scenery.new","hxlr/lines/Scenery.hx",13,0xbad499d4)
namespace hxlr{
namespace lines{

void Scenery_obj::__construct( ::hxlr::math::geom::Point _start, ::hxlr::math::geom::Point _end,bool _shift){
            	HX_STACKFRAME(&_hx_pos_7ef66b0669401619_13_new)
HXLINE(  14)		super::__construct(_start,_end,_shift,null());
HXLINE(  16)		this->type = 2;
            	}

Dynamic Scenery_obj::__CreateEmpty() { return new Scenery_obj; }

void *Scenery_obj::_hx_vtable = 0;

Dynamic Scenery_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Scenery_obj > _hx_result = new Scenery_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Scenery_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1e2b1e6a) {
		if (inClassId<=(int)0x196fd3dc) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x196fd3dc;
		} else {
			return inClassId==(int)0x1e2b1e6a;
		}
	} else {
		return inClassId==(int)0x2a2a2bae;
	}
}


::hx::ObjectPtr< Scenery_obj > Scenery_obj::__new( ::hxlr::math::geom::Point _start, ::hxlr::math::geom::Point _end,bool _shift) {
	::hx::ObjectPtr< Scenery_obj > __this = new Scenery_obj();
	__this->__construct(_start,_end,_shift);
	return __this;
}

::hx::ObjectPtr< Scenery_obj > Scenery_obj::__alloc(::hx::Ctx *_hx_ctx, ::hxlr::math::geom::Point _start, ::hxlr::math::geom::Point _end,bool _shift) {
	Scenery_obj *__this = (Scenery_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Scenery_obj), true, "hxlr.lines.Scenery"));
	*(void **)__this = Scenery_obj::_hx_vtable;
	__this->__construct(_start,_end,_shift);
	return __this;
}

Scenery_obj::Scenery_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Scenery_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Scenery_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Scenery_obj::__mClass;

void Scenery_obj::__register()
{
	Scenery_obj _hx_dummy;
	Scenery_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hxlr.lines.Scenery",ac,39,db,62);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Scenery_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Scenery_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Scenery_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hxlr
} // end namespace lines
